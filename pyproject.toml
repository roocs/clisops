[build-system]
requires = ["flit_core >=3.12.0,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "clisops"
authors = [
  {name = "Elle Smith", email = "eleanor.smith@stfc.ac.uk"},
  {name = "Ag Stephens", email = "ag.stephens@stfc.ac.uk"},
  {name = "Carsten Ehbrecht", email = "ehbrecht@dkrz.de"},
  {name = "Trevor James Smith", email = "smith.trevorj@ouranos.ca"}
]
maintainers = [
  {name = "Carsten Ehbrecht", email = "ehbrecht@dkrz.de"},
  {name = "Trevor James Smith", email = "smith.trevorj@ouranos.ca"}
]
readme = {file = "README.rst", content-type = "text/x-rst"}
requires-python = ">=3.10.0"
keywords = ["clisops", "xarray", "climate", "gis", "subsetting", "operations"]
license = {file = "LICENSE"}
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: System Administrators",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: BSD License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Atmospheric Science",
  "Topic :: Scientific/Engineering :: GIS",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: System :: Distributed Computing",
  "Typing :: Typed"
]
dynamic = ["description", "version"]
dependencies = [
  "aiohttp", # Needed for HTTPFileSystem
  "bottleneck >=1.3.1",
  "cartopy >=0.23",
  # cf-xarray is differently named on conda-forge
  "cf-xarray >=0.10.6",
  "cftime >=1.4.1",
  "dask[complete] >=2023.6.0",
  "fastparquet >=2024.11.0",
  "filelock >=3.15.4",
  "fsspec >=2023.9.0",
  "geopandas >=1.0",
  "jinja2 >=2.11",
  "loguru >=0.5.3",
  "numpy >=1.25.0,<2.3.0",
  "packaging >=23.2",
  "pandas >=2.2.0",
  "platformdirs >=4.0",
  "pooch >=1.8.0",
  "pyproj >=3.3.0",
  "requests", # Needed for HTTPFileSystem
  # roocs_grids is differently named on conda-forge
  "roocs_grids >=0.1.2",
  "s3fs >=2025.5.1",
  "scipy>=1.11.0",
  "shapely >=2.0",
  "xarray >=2025.1.1", # Use decode_times=CFDatetimeCoder(use_cftime=True)
  "zarr >=2.13.0,<3.0"
]

[project.optional-dependencies]
dev = [
  # Dev tools and testing
  "bump-my-version >=1.2.0",
  "coverage[toml] >=7.5.0",
  "deptry >=0.23.0",
  "flake8 >=7.2.0",
  "flake8-rst-docstrings >=0.3.0",
  "h5netcdf >=1.4.0",
  "pip >=25.0",
  "pre-commit >=3.5.0",
  "pytest >=8.0.0",
  "pytest-cov >=5.0.0",
  "pytest-loguru >=0.3.0",
  "pytest-xdist[psutil] >=3.2",
  "ruff >=0.11.12",
  "tox >=4.24.1",
  "watchdog >=4.0.0"
]
docs = [
  "ipykernel",
  "ipython >=8.5.0",
  "ipython_genutils",
  "jupyter_client",
  "matplotlib >=3.6.0",
  "nbconvert >=7.14.0",
  "nbsphinx >=0.9.5",
  "psy-maps >=1.5.0", # FIXME: This library is unmaintained and not available on conda-forge for Python 3.13
  "sphinx >=7.1.0,<8.2", # pinned until nbsphinx supports sphinx 8.2
  "sphinx-autodoc-typehints",
  "sphinx-codeautolink",
  "sphinx-copybutton",
  "sphinx-rtd-theme >=1.0"
]
extras = [
  "xesmf >=0.8.10",
  # See: https://github.com/pydata/xarray/issues/7794
  "xarray >=2025.6.0"
]

[project.urls]
"Homepage" = "https://clisops.readthedocs.io/"
"Source" = "https://github.com/roocs/clisops/"
"Changelog" = "https://clisops.readthedocs.io/en/latest/history.html"
"Issue tracker" = "https://github.com/roocs/clisops/issues"
"About ROOCS" = "https://roocs.github.io/"

[tool]

[tool.bumpversion]
current_version = "0.16.2"
commit = true
tag = false
allow_dirty = false

[[tool.bumpversion.files]]
filename = "clisops/__version__.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""

[[tool.bumpversion.files]]
filename = "docs/conf.py"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""

[tool.codespell]
ignore-words-list = "scrip,nam,te,mye,bu,lik,tread,fo"

[tool.coverage.paths]
source = ["clisops", "*/site-packages/clisops/"]

[tool.coverage.run]
relative_files = true
omit = ["*/tests/*.py"]
source = ["clisops"]

[tool.deptry]
extend_exclude = ["docs"]
ignore_notebooks = true
pep621_dev_dependency_groups = ["dev", "docs", "extras"]

[tool.deptry.per_rule_ignores]
DEP002 = ["aiohttp", "bottleneck", "cartopy", "fastparquet", "netcdf4", "requests", "s3fs", "zarr"]
DEP003 = ["clisops"] # should be removed when restructuring to src layout
DEP004 = ["xesmf"]

[tool.flit.sdist]
include = [
  "AUTHORS.rst",
  "CHANGES.rst",
  "CONTRIBUTING.rst",
  "LICENSE",
  "Makefile",
  "README.rst",
  "clisops/**/*.py",
  "clisops/etc/roocs.ini",
  "docs/**/*.rst",
  "docs/Makefile",
  "docs/_static/roocs.png",
  "docs/conf.py",
  "docs/make.bat",
  "docs/notebooks/*.ipynb",
  "requirements_upstream.txt",
  "roocs-utils.HISTORY.txt",
  "setup.cfg",
  "tests/*.py",
  "tests/data/*.json",
  "tests/data/*.nc",
  "tox.ini"
]
exclude = [
  "**/*.py[co]",
  "**/__pycache__",
  ".*",
  "docs/_build",
  "docs/clisops*.rst",
  "docs/modules.rst",
  "docs/notebooks/.ipynb_checkpoints",
  "environment.yml",
  "notebooks"
]

[tool.numpydoc_validation]
checks = [
  "all", # report on all checks, except the below
  "ES01", # "No extended summary found"
  "EX01", # "No examples section found"
  "GL06", # "Found unknown section \"{section}\""
  "SA01", # "See Also section not found",
  "SS01" # "No summary found"
]
# remember to use single quotes for regex in TOML
exclude = [
  # don't report on objects that match any of these regex
  '\.undocumented_method$',
  '\.__repr__$',
  # any object starting with an underscore is a private object
  '\._\w+'
]
override_SS05 = [
  # override SS05 to allow docstrings starting with these words
  '^Access ',
  '^Assess ',
  '^Days ',
  '^Degree-days ',
  '^Griffiths ',
  '^Process ',
  '^Statistics '
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
  "-ra",
  "--verbose",
  "--color=yes",
  "--numprocesses=0",
  "--maxprocesses=8",
  "--dist=worksteal",
  "--strict-config",
  "--strict-markers"
]
filterwarnings = ["ignore::UserWarning"]
markers = [
  "online: mark test to need internet connection",
  "slow: mark test to be slow",
  "thread_unsafe: mark test to be thread unsafe"
]

[tool.ruff]
src = ["clisops"]
line-length = 120
exclude = [
  ".eggs",
  ".git",
  "build"
]
extend-include = [
  "*.ipynb" # Include notebooks
]

[tool.ruff.format]
line-ending = "lf"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint]
extend-select = [
  "D213", # multi-line-summary-second-line
  "RUF022" # unsorted-dunder-all
]
ignore = [
  "B904", # raise-without-from-inside-except
  "B028", # no-explicit-stacklevel
  "D203", # incorrect-blank-line-before-class
  "D205", # blank-line-after-summary
  "D212", # multi-line-summary-first-line
  "D400", # ends-in-period
  "D401", # non-imperative-mood
  "F403" # undefined-local-with-import-star
]
preview = true
select = [
  "B", # bugbear
  "C90", # mccabe-complexity
  "D", # docstrings
  "E", # pycodestyle errors
  "F", # pyflakes
  "I", # imports
  "N802", # invalid-function-name
  "S", # bandit
  "UP", # pyupgrade
  "W" # pycodestyle warnings
]

[tool.ruff.lint.flake8-bandit]
check-typed-exception = true

[tool.ruff.lint.flake8-import-conventions.aliases]
"matplotlib.pyplot" = "plt"
numpy = "np"
pandas = "pd"
scipy = "sp"
xarray = "xr"

[tool.ruff.lint.isort]
case-sensitive = true
detect-same-package = false
known-first-party = ["xclim"]
no-lines-before = ["future"]

[tool.ruff.lint.mccabe]
max-complexity = 20

[tool.ruff.lint.per-file-ignores]
"docs/*.py" = ["D100", "D101", "D102", "D103"]
"docs/notebooks/*.ipynb" = ["E225", "E226", "E231", "E501"]
"clisops/__init__.py" = ["E402", "E501"]
"tests/**/*test*.py" = ["D100", "D101", "D102", "D103", "E501", "N802", "S101", "S108"]
