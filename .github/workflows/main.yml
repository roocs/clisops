name: CLISOPS Testing Suite

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  lint:
    name: Linting Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tox-env:
          - lint
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - name: Install tox
        run: |
          python -m pip install tox~=4.0
      - name: Run linting suite
        run: |
          python -m tox -e ${{ matrix.tox-env }}

  pypi:
    name: Python${{ matrix.python-version }} (PyPI + Tox)
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python-version: "3.8"
            tox-env: py38
          - python-version: "3.9"
            tox-env: py39
          - python-version: "3.10"
            tox-env: py310
          - python-version: "3.11"
            tox-env: py311
          - python-version: "3.12"
            tox-env: py312
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install tox
      run: |
        python -m pip install tox~=4.0
    - name: Test with tox
      run: |
        python -m tox -e ${{ matrix.tox-env }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_FLAG_NAME: run-${{ matrix.tox-env }}
        COVERALLS_PARALLEL: true
        COVERALLS_SERVICE_NAME: github

  conda:
    name: Python${{ matrix.python-version }} (Anaconda, upstream=${{ matrix.upstream }})
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - python-version: "3.9"
            upstream: false
          - python-version: "3.10"
            upstream: false
          - python-version: "3.11"
            upstream: false
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Conda (Micromamba) with Python${{ matrix.python-version }}
        uses: mamba-org/setup-micromamba@v1
        with:
          cache-downloads: true
          cache-environment: true
          environment-file: environment.yml
          create-args: >-
            conda
            python=${{ matrix.python-version }}
      - name: Conda and Mamba versions
        run: |
          conda --version
          echo "micromamba: $(micromamba --version)"
      - name: Install CLISOPS
        run: |
          python -m pip install --no-user --editable ".[dev]"
      - name: Install upstream dependencies
        if: ${{ matrix.upstream }}
        run: |
          python -m pip install -r requirements_upstream.txt
      - name: Check versions
        run: |
          conda list
          python -m pip check || true
      - name: Test with conda
        run: |
          python -m pytest --cov tests

  finish:
    needs:
      - pypi
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
      - name: Coveralls Finished
        run: |
          python -m pip install --upgrade coveralls
          coveralls --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_SERVICE_NAME: github
