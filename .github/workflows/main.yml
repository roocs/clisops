name: CLISOPS Testing Suite

on:
  push:
    branches:
      - master
  pull_request:

concurrency:
  # For a given workflow, if we push to the same branch, cancel all previous builds on that branch except on master.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

env:
  ESGF_TEST_DATA_VERSION: v1
  XCLIM_TEST_DATA_VERSION: v2024.8.23

permissions:
  contents: read

jobs:
  lint:
    name: Linting Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tox-env:
          - lint
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Set up Python${{ matrix.python-version }}
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: "3.10"
          cache: pip
      - name: Install tox
        run: |
          python -m pip install tox~=4.24.1
      - name: Environment Caching
        uses: actions/cache@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4.2.1
        with:
          path: |
            .tox
          key: ${{ runner.os }}-${{ hashFiles('pyproject.toml', 'tox.ini') }}-lint-${{ env.ESGF_TEST_DATA_VERSION }}
      - name: Run linting suite
        run: |
          python -m tox -e ${{ matrix.tox-env }}

  pypi:
    name: Python${{ matrix.python-version }} (PyPI + Tox)
    needs: lint
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        include:
          - python-version: "3.10"
            tox-env: py310-coveralls
          - python-version: "3.11"
            tox-env: py311-coveralls
          - python-version: "3.12"
            tox-env: py312-coveralls
          - python-version: "3.13"
            tox-env: py313
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Set up Python${{ matrix.python-version }}
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Install tox
        run: |
          python -m pip install tox~=4.24.1
      - name: Environment Caching
        uses: actions/cache@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4.2.1
        with:
          path: |
            ~/.cache/mini-esgf-data
            ~/.cache/xclim-testdata
            .tox
          key: ${{ runner.os }}-${{ hashFiles('pyproject.toml', 'tox.ini') }}-Python${{ matrix.python-version }}-${{ env.ESGF_TEST_DATA_VERSION }}
      - name: Test with tox
        run: |
          python -m tox -e ${{ matrix.tox-env }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: run-${{ matrix.tox-env }}
          COVERALLS_PARALLEL: true
          COVERALLS_SERVICE_NAME: github

  conda:
    name: Python${{ matrix.python-version }} (Anaconda, upstream=${{ matrix.upstream }})
    needs: lint
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        include:
          - python-version: "3.10"
            upstream: false
          - python-version: "3.11"
            upstream: false
          - python-version: "3.12"
            upstream: false
          - python-version: "3.13"
            upstream: false
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Setup Conda (Micromamba) with Python${{ matrix.python-version }}
        uses: mamba-org/setup-micromamba@0dea6379afdaffa5d528b3d1dabc45da37f443fc # v2.0.4
        with:
          cache-downloads: true
          cache-environment: true
          environment-file: environment.yml
          create-args: >-
            python=${{ matrix.python-version }}
            pytest-timeout
      - name: Install CLISOPS
        run: |
          python -m pip install --no-user --no-deps --editable .
      - name: Install upstream dependencies
        if: ${{ matrix.upstream }}
        run: |
          python -m pip install -r requirements_upstream.txt
      - name: Test Data Caching
        uses: actions/cache@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4.2.1
        with:
          path: |
            ~/.cache/mini-esgf-data
            ~/.cache/xclim-testdata
          key: ${{ runner.os }}-${{ hashFiles('pyproject.toml', 'tox.ini') }}-conda-Python${{ matrix.python-version }}-${{ env.ESGF_TEST_DATA_VERSION }}
      - name: Check versions
        run: |
          micromamba list
          python -m pip check || true
      - name: Test with conda
        run: |
          python -m pytest -m "not slow" --timeout=180 --durations=10 --cov=clisops --cov-report=lcov

  finish:
    needs:
      - pypi
      - conda
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
      - name: Coveralls Finished
        run: |
          python -m pip install --upgrade coveralls
          coveralls --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_SERVICE_NAME: github
