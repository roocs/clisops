name: Test Upstream Dependencies

on:
  push:
    branches:
      - master
    paths-ignore:
      - HISTORY.rst
      - README.rst
      - pyproject.toml
      - setup.cfg
      - clisops/__init__.py
  schedule:
    - cron: "0 0 * * *" # Daily “At 00:00” UTC
  workflow_dispatch: # allows you to trigger the workflow run manually

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  upstream-dev:
    name: test-upstream-dev (Python${{ matrix.python-version }})
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'schedule') ||
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'push')
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.12"
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          disable-sudo: true
          egress-policy: audit
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.
          persist-credentials: false
      - name: Setup Conda (Micromamba) with Python${{ matrix.python-version }}
        uses: mamba-org/setup-micromamba@7f29b8b80078b1b601dfa018b0f7425c587c63bb # v2.0.6
        with:
          cache-downloads: true
          cache-environment: true
          environment-file: environment.yml
          create-args: >-
            python=${{ matrix.python-version }}
            pytest-reportlog
      - name: Install CLISOPS
        run: |
          python -m pip install --no-deps --no-user --editable .
      - name: Install upstream versions
        run: |
          python -m pip install -r CI/requirements_upstream.txt
      - name: Check versions
        run: |
          micromamba list
          python -m pip check || true
      - name: Run Tests
        if: success()
        id: status
        run: |
          python -m pytest --durations=10 --cov=clisops --cov-report=term-missing --report-log output-${{ matrix.python-version }}-log.jsonl
      - name: Generate and publish the report
        if: |
          failure()
          && steps.status.outcome == 'failure'
          && github.event_name == 'schedule'
          && github.repository_owner == 'roocs'
        uses: xarray-contrib/issue-from-pytest-log@v1
        with:
          log-path: output-${{ matrix.python-version }}-log.jsonl
